# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  test1:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    # Environment variable
    env:
      RUN_UID: ${{ github.run_id }}.${{ github.run_number }}.${{ github.run_attempt }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - id: testVar
        name: JSON Handling
        run: |
          export TEST_VAR=2
          echo "test_var=${TEST_VAR}" >> $GITHUB_OUTPUT

    outputs:
      testVar: ${{ steps.testVar.outputs.test_var }}

  test2:
    needs: test1
    runs-on: ubuntu-latest
    if: needs.test1.outputs.testVar == 2
    steps:
      - name: Print Result
        run: echo "${{ needs.test1.outputs.testVar }}"

  json_test:
  
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Runs a set of commands using the runners shell
      - id: testVar
        name: JSON Handling
        run: |
          RECIPE=$(curl https://dummyjson.com/recipes | jq '.recipes[] | select(.id == 1 and .name == "Classic Margherita Pizza")')
          if [[ -z "$RECIPE" ]]; then
            export HAS_RECIPE=FALSE
          else
            export HAS_RECIPE=TRUE
          fi
          echo "has_recipe=${HAS_RECIPE}" >> $GITHUB_OUTPUT

    outputs:
      has_recipe: ${{ steps.testVar.outputs.has_recipe }}

  json_test_print:
    needs: json_test
    runs-on: ubuntu-latest
    if: needs.json_test.outputs.has_recipe == "TRUE"
    steps:
      - name: Print
        run: echo "${{ needs.json_test.outputs.has_recipe }}"
